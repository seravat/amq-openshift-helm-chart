NAME: amq
LAST DEPLOYED: Thu May 25 13:20:12 2023
NAMESPACE: amq-operator-cluster
STATUS: pending-install
REVISION: 1
TEST SUITE: None
USER-SUPPLIED VALUES:
amq:
  name: amq-broker-rhel8
  operator:
    namespace: amq-operator-cluster
    scope: cluster
    subscription:
      allNamespaces: false
      channel: 7.10.x
      installPlanApproval: Manual
      name: amq-broker-rhel8
      source: redhat-operators
      sourceNamespace: openshift-marketplace
      startingCSV: amq-broker-operator.v7.10.2-opr-2

COMPUTED VALUES:
amq:
  application: amq-broker
  name: amq-broker-rhel8
  operator:
    namespace: amq-operator-cluster
    scope: cluster
    subscription:
      allNamespaces: false
      channel: 7.10.x
      installPlanApproval: Manual
      name: amq-broker-rhel8
      source: redhat-operators
      sourceNamespace: openshift-marketplace
      startingCSV: amq-broker-operator.v7.10.2-opr-2

HOOKS:
---
# Source: helm-amq-broker/templates/3-post-sub-hook.yaml
apiVersion: batch/v1  
kind: Job  
metadata:  
  name: "amq"  
  labels:  
    app.kubernetes.io/managed-by: "Helm"  
    app.kubernetes.io/instance: "amq"  
    app.kubernetes.io/version: 1.0  
    helm.sh/chart: "helm-amq-broker-0.1.0"  
  annotations:  
    # This is what defines this resource as a hook. Without this line, the  
    # job is considered part of the release.  
    "helm.sh/hook": post-install,post-upgrade  
    "helm.sh/hook-weight": "-5"  
    "helm.sh/hook-delete-policy": hook-succeeded  
spec:  
  template:  
    metadata:  
      name: "amq"  
      labels:  
        app.kubernetes.io/managed-by: "Helm"  
        app.kubernetes.io/instance: "amq"  
        helm.sh/chart: "helm-amq-broker-0.1.0"  
    spec:  
      restartPolicy: Never  
      containers:  
      - name: post-install-job  
        image: "image-registry.openshift-image-registry.svc:5000/openshift/tools:latest"  
        command: 
            - "/bin/bash"
            - "-c"
            - "# This scripts checks if \"startingCSV\" is set on the Subscription and in that case approves only the InstallPlan with the wanted CSV\n\nif [ \"oc get subscription.operators.coreos.com amq-broker-rhel8 -o jsonpath='{.spec.installPlanApproval}')\" == \"Manual\" ]; then\n  echo 'Waiting for InstallPlan to show up.'\n  WHILECMD='[ -z \"$(oc get installplan -l operators.coreos.com/amq-broker-rhel8.myproject -oname)\" ]'\n  timeout 15m sh -c \"while $WHILECMD; do echo Waiting; sleep 10; done\"\n\n  # Search InstallPlan based on startingCSV\n  startingCSV=$(oc get subscription.operators.coreos.com amq-broker-rhel8 -o jsonpath='{.spec.startingCSV}')\n  if [ -z \"$startingCSV\" ]; then\n    # no startingCSV: check all InstallPlans\n    installplans=$(oc get installplan -l operators.coreos.com/amq-broker-rhel8.myproject -oname)\n  else\n    # startingCSV is set: get the InstallPlan with matching \"clusterServiceVersionNames\" to avoid unexpected upgrades.\n    # This should return max one InstallPlan, unless multiple operators are installed in the same namespace\n    installplans=$(oc get ip -ojson | jq -r '.items[] | select( .spec.clusterServiceVersionNames[] | contains(\"amq-broker-operator.v7.11.0-opr-2\"))\u00a0 | .metadata.name')\n    # Could also filter for \"approved == false\" in one command, then we wouldn't need to check later\n    #installplans=$(oc get ip -ojson | jq -r '.items[] | select( (.spec.clusterServiceVersionNames[] | contains(\"amq-broker-operator.v7.11.0-opr-3\")) and .spec.approved == false )\u00a0 | .metadata.name')\n  fi\n  \n  # No InstallPlan found\n  if [ -z \"$installplans\"]; then\n    echo \"No InstallPlan was found for operator with label operators.coreos.com/amq-broker-rhel8.myproject. This indicates a failure about operator installation.\"\n    exit 1\n  fi\n  \n  # Approve the InstallPlans\n  for installplan in $installplans\n  do\n    if [ \"$(oc get $installplan -o jsonpath='{.spec.approved}')\" == \"false\" ]; then\n      echo \"Approving install plan $installplan\"\n      oc patch $installplan --type=json -p='[{\"op\":\"replace\",\"path\": \"/spec/approved\", \"value\": true}]'\n    else\n      echo \"Install Plan '$installplan' was already approved\"\n    fi\n  done\n\nfi"
MANIFEST:
---
# Source: helm-amq-broker/templates/1-operatorgroup.yaml
apiVersion: operators.coreos.com/v1
kind: OperatorGroup
metadata:
  name: amq-broker-rhel8-og
spec: {}
---
# Source: helm-amq-broker/templates/2-subscription.yaml
apiVersion: operators.coreos.com/v1alpha1
kind: Subscription
metadata:
  name: amq-broker-rhel8
  namespace: amq-operator-cluster  
spec:
  channel: 7.10.x
  installPlanApproval: Manual
  name: amq-broker-rhel8
  source: redhat-operators
  sourceNamespace: openshift-marketplace
  startingCSV: amq-broker-operator.v7.10.2-opr-2

